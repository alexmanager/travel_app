<?php

namespace ApiBundle\Entity;

use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Validator\Constraints\DateTime;

/**
 * TripRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TripRepository extends \Doctrine\ORM\EntityRepository
{
    public function fileterByRequest(Request $request, $user_id)
    {
        $start   = $request->get('start', 0);
        $length    = $request->get('length', 20);
        $order_field    = $request->get('order_field', 'start_dt');
        $order_dir    = $request->get('order_dir', 'DESC');
        $search = $request->get('search', false);

        $date_filter = filter_var($request->get('date_filter_check', false), FILTER_VALIDATE_BOOLEAN);
        $start_dt_filter = filter_var($request->get('start_dt_filter_check', false), FILTER_VALIDATE_BOOLEAN);
        $end_dt_filter = filter_var($request->get('end_dt_filter_check', false), FILTER_VALIDATE_BOOLEAN);

        $qb = $this
            ->createQueryBuilder('trip')
            ->select(['trip.id', 'trip.start_dt', 'trip.end_dt', 'trip.end_dt', 'trip.created_dt', 'trip.destination', 'trip.departure', 'trip.description'])
            ->Join('trip.user', 'user')
            ->where('user.id = :user_id')
            ->setParameter('user_id', $user_id)
            ->orderBy('trip.'.$order_field, $order_dir)
            ->setMaxResults($length)
            ->setFirstResult($start);

        if ($search){
            $qb
                ->andWhere('trip.destination LIKE :destination')
                ->setParameter('destination', '%'.$search.'%');
        }

        if ($date_filter ){
            $date_filter_cond = $request->get('date_filter_cond', false);
            $date_filter_value = $request->get('date_filter_value', false);
            switch ($date_filter_cond){
                case '=':
                    $qb
                        ->andWhere('trip.start_dt <= :date_filter_value')
                        ->andWhere('trip.end_dt >= :date_filter_value')
                        ->setParameter('date_filter_value', $date_filter_value);
                    break;
                case '<':
                    $qb
                        ->andWhere('trip.start_dt < :date_filter_value')
                        ->setParameter('date_filter_value', $date_filter_value);
                    break;
                    break;
                case '>':
                    $qb
                        ->andWhere('trip.start_dt > :date_filter_value')
                        ->setParameter('date_filter_value', $date_filter_value);
                    break;
            }
        }

        if ($start_dt_filter){
            $start_dt_filter_cond = $request->get('start_dt_filter_cond', false);
            $start_dt_filter_value = $request->get('start_dt_filter_value', false);
            switch ($start_dt_filter_cond){
                case '=':
                    $qb
                        ->andWhere('trip.start_dt = :start_dt_filter_value')
                        ->setParameter('start_dt_filter_value', $start_dt_filter_value);
                    break;
                case '<':
                    $qb
                        ->andWhere('trip.start_dt < :start_dt_filter_value')
                        ->setParameter('start_dt_filter_value', $start_dt_filter_value);
                    break;
                case '>':
                    $qb
                        ->andWhere('trip.start_dt > :start_dt_filter_value')
                        ->setParameter('start_dt_filter_value', $start_dt_filter_value);
                    break;
                case 'between':
                    $start_dt_filter_value1 = new \DateTime($start_dt_filter_value);
                    $start_dt_filter_value2 = new \DateTime($start_dt_filter_value);
                    $start_dt_filter_value1->modify('first day of this month');
                    $start_dt_filter_value2->modify('last day of this month');

                    $qb
                        ->andWhere('trip.start_dt BETWEEN :start_dt_filter_value1 AND :start_dt_filter_value2')
                        ->setParameter('start_dt_filter_value1', $start_dt_filter_value1)
                        ->setParameter('start_dt_filter_value2', $start_dt_filter_value2);
                    break;
            }
        }

        if ($end_dt_filter){
            $end_dt_filter_cond = $request->get('end_dt_filter_cond', false);
            $end_dt_filter_value = $request->get('end_dt_filter_value', false);
            switch ($end_dt_filter_cond){
                case '=':
                    $qb
                        ->andWhere('trip.end_dt = :end_dt_filter_value')
                        ->setParameter('end_dt_filter_value', $end_dt_filter_value);
                    break;
                case '<':
                    $qb
                        ->andWhere('trip.end_dt < :end_dt_filter_value')
                        ->setParameter('end_dt_filter_value', $end_dt_filter_value);
                    break;
                case '>':
                    $qb
                        ->andWhere('trip.end_dt > :end_dt_filter_value')
                        ->setParameter('end_dt_filter_value', $end_dt_filter_value);
                    break;
            }
        }
        //dump($qb->getQuery()->getSQL());die;

        return $qb->getQuery()->getResult();
    }
}
